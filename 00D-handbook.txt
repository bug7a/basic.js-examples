
basic.js LIBRARY (v1.6.4) - HANDBOOK

basic.js is a technique (JavaScript library) that simplifies project development.


INTRODUCTION

In this book, you will find a list and brief explanations of the codes you can use with the basic.js library.

- When a project using the library is first opened; If it exists, the start() function is called ONCE.
-- Before, all the variables and functions written on the outermost are ready to be used.
-- Uses the "load" event in JavaScript.
See blank project template: 0C-blank-project-theme.htm

Project website:
https://bug7a.github.io/basic.js/

Sample project for mobile application development:
https://bug7a.github.io/cordova-mobile-app-ui-template/


DATA TYPES USED:

Simple data types:
- string, text. "A text"
- integer, integer. 10
- float, decimal number. 5.5
- boolean, 1 or 0

Advanced data types:
- Array, array. [ ]
- Object, object. { }

Other types:
- BasicObject, the basic object. It can be a Label, Button, TextBox, Image or Box object.
-- This name is a special designation used to identify objects in the basic.js library.
- function, function. function() { }


---


BASIC FUNCTIONS:

random(number1:integer, number2:integer) : integer
- Generates a random number between two given numbers.
-- The numbers given are included.
- The meanings of the code shown above as an example are as follows;
random is the name of the function.
number1 is the name of the first parameter.
integer, the data type of the first parameter.
number2 is the name of the second parameter.
integer, the data type of the second parameter.
integer, the data type of the response returned by the function.
random(1, 8) --> 5
See: 04-dice.htm

print(message:string)
- Sends a message to the console.

num(text:string) : float
num(text:string, type:string) : float veya integer
- Converts a text type value to a number type.
- type determines the type of number to answer.
"integer" or "int": returns integer, "float": returns decimal.
-- Used as "float" when the parameter is left blank.
- In decimal numbers, only 2 digits after the period are allowed.
NOTE: If you need more digits, look into the parseFloat() function.
See: 03-basic-calculator.htm

str(number:integer veya float) : string
- Converts a number type value to text type.

go(url:string)
go(url:string, windowType:string)
- Redirects to another .htm file or URL.
- windowType determines how the page is opened.
"_self": open on same page, "_blank": open on different page.
-- If the parameter is left blank, it is treated as "_self".

twoDigitFormat(number:integer) : string
- Allows the number to be converted into a 2-digit text.
twoDigitFormat(4) -> "04"
twoDigitFormat(12) -> "12"
NOTE: It can be used for values such as time, counter, date.

isMobile() : boolean
- Checks if the device is mobile.
1: mobile device, 0: computer 


---


PAGE OBJECT (OBJECT NAME: page, CLASS NAME: MainBox):
- It is the object that provides the management of the page.
- Represents the visible area of ​​the screen. Does not support Scroll Bar.
-- The scrollbar is only available with the box object (BOX).

page.bodyElement
- Element object that connects the object with HTML.
- Uses <body> element in HTML.
- It is the object obtained by document.getElementsByTagName("BODY")[0] in JavaScript.

page.color
- Sets the page background color.

page.width
- Allows you to get the page width.
-- This value cannot be changed. It can only be read.

page.height
- Allows you to get the page height.
-- This value cannot be changed. It can only be read.

page.fit(originalWidth:integer, maxWidth:integer)
- Adjusts the width of the content to fit the screen.
originalWidth is the width of the content you want to appear on the screen. (Including the spaces to be left on the sides.)
maxWidth, the maximum the content can be expanded.
-- If the parameter is left blank, it is considered the same as the originalWidth value.
-- maxWidth does not have to be larger than the original size of the content.
See: 20-basic-mobile-app-template.htm

page.zoom
- Adjusts the growth/shrinking rate of the page.
1: 100% size, 0.5: 50% size, 1.5: 150% size, etc.
- The page.fit() function sets the width of the page using this property.
- Its value is float data type.
- Uses transform:scale() property in CSS.

page.onClick(func:function)
- Each time the page is pressed; the specified function is called.
-- All objects added to the page are also part of the page. This event is also triggered when a different object in the page is pressed.
-- If you want to control printing, except for added objects, you can add a transparent box object inside the page object that will stay behind.
- remove with page.remove_onClick(func:function)
See: 65-length-measure-conversion-application.htm

page.onResize(func:function)
- Every time the page size changes; the specified function is called.
-- NOT CALLED for the initial size of the page on load.
- remove with page.remove_onResize(func:function)

page.add(object:BasicObject)
- Used to move a base object back into the page.
-- Objects are created, by default, within the page object.


---


COMMON FEATURES AND METHODS OF BASIC OBJECTS:
- Can also be used for 5 basic objects. Objects: Label, Button, TextBox, Image and Box

that
- When a base object is created, until another is created; This object can be accessed with the name that.

object.left
- Determines the distance of the object to the left.
- Its value is float data type.
-- Positioning as float allows for smoother movements.

object.top
- Determines the distance of the object up.
- Its value is float data type.

object.right
- Left leaning is cancelled. And the object starts to justify right with the given value.
-- If the page or object size changes, the distance to the right is maintained.
- Its value is float data type.

object.bottom
- The lean-up is cancelled. And the object starts to snap down with the given value.
- Its value is float data type.

object.width
- Sets the width of the object.
- The value it carries is integer data type.

object.height
- Sets the height of the object.
- The value it carries is integer data type.

object.rotate
- Changes the angle of the object.
0: 0 degrees, 90: 90 degrees, 360: 360 degrees ...
- 0 and 360 degrees represent the same direction.
- The value it carries is integer data type.
- Uses transform:rotate() property in CSS.

object.visible
- Makes the object visible/invisible.
1: visible, 0: invisible
- Uses the display property in CSS.

object.opacity
- Determines if the object is not transparent.
1: visible, 0: invisible, 0.2: 20% visible, 0.55: 55% visible

object.color
- Sets the color of the object.
- Uses the background-color property in CSS.

object.border
- Adds a border to the object.
0: no border, 1: 1px thick border, 2: 2px thick, 3: 3px thick...

object.borderColor
- Sets the border color of the object.

object.round
- Rounds the edges of the object.
- Uses border-radius property in CSS.

object.fontSize or object.textSize
- Determines the text size of the object.

object.textColor
- Sets the text color of the object.
- Uses the color property in CSS.

object.textAlign
- Determines the position of the text in the object.
"left": justified left, "right": justified right, "center": centered, "justify": auto-space between words

object.clickable
- Makes the object clickable/non-clickable.
1: clickable, 0: not clickable
- when using the object.onClick(func:function) function: The object is automatically clickable.
-- Button and TextBox objects are clickable by default.
- Uses pointer-events:auto or none property in CSS.

object.element
- Element object that connects the object with HTML.
- It is the object obtained by document.getElementById(id:string) in JavaScript.

object.upperObject
- Returns a parent (containing) object of the object.
- The top object is the page.
- The created objects are first moved into the page object.
-- With the selectBox(target:Box) function, the first object to be moved can be changed.

object.onResize(func:function)
- Every time the size of the object changes; the specified function is called.
-- Also called when the object is first created.
- It can be used to update the positions of auto-sized objects in the coordinate system.
-- Label.width, label.height, button.width and box.height properties can be set to "auto". Like lblName.width = "auto".
-- The object itself is sent to the called function.
- remove with object.remove_onResize(func:function)

object.center(direction:string)
- Centers the object relative to the object it is in.
- direction, in which direction you want to average.
"left": center horizontally, "ball": center vertically
-- If the parameter is left blank, it will center in both directions.
-- The .left and .top values ​​of the object are changed to appear in the middle.
See: 19-objects-align.htm

object.aline(target:BasicObject, direction:string, space:integer)
- Positions one object relative to the position of another object.
- target, by which object to position.
- direction, in which direction it will be positioned.
"right": right, "left": left, "top": top, "bottom" position to bottom.
-- If the parameter is left blank, it will position the target directly above the object.
- space, how much space to leave between objects.
-- If the parameter is left blank, it is assumed to be 0.
-- If the target object uses the .right and/or .bottom properties for positioning, the positioned object will also use these properties.
See: 19-objects-align.htm

object.remove()
- Deletes the object.

object.prop(properties:Object)
- Changes the properties of the object in bulk.
object.prop({width: 100, height: 120, color: "red"})
See: 20-basic-mobile-app-template.htm

object.setMotion(motionString:string)
- It ensures that the changes in the specified properties of the object occur slowly in the specified time.
- motionString, the properties that are desired to be animated and the information for how long the motion will take place.
Examples:
"all 0.3s": all properties will be animated in 0.3 seconds.
"left 1s, opacity 1s": smooth horizontal position change and transparency only. Let it take 1 second.
"width 2s": only changes in the width of the object make it animated. Let it take 2 seconds.
"left 1s, top 1s, width 0.5s, height 0.5s, transform 1s, background-color 1s, border-radius 1s, opacity 1s": Many motions are softened.
-- Once this property is set, that property of the object always changes slowly.
-- Use object.setMotion("none") to disable the object's motion property.
-- Or, to pause it temporarily, object.dontMotion() can be used.
- Uses transition property in CSS.
See: 55-basic-css-animation.htm

object.getMotion() : string
- Returns the object's motionString value set with the setMotion() function.

object.withMotion(func:function)
- It is used if the initial value of the object to be moved is determined.
See: 55-basic-css-animation.htm
- Example:
object.dontMotion()
object.opacity = 0
object.withMotion(function(self) {
	self.opacity = 1
})

object.dontMotion()
- Motion of a defined object; temporarily allows its properties to be changed inactive.
See: 55-basic-css-animation.htm


---


BOX OBJECT (CLASS NAME: Box):
- Used to group other objects or create a shape.

createBox(left:float, top:float, width:integer, height:integer) : Box
- Alternatively, it can be used as cbox(*) or new Box(*).
- Creates a new box object.

object.text or object.html
- Edits the text inside the object.
- Accepts HTML code.
- To show content rendered in HTML inside the box object,
object.html = document.getElementById("my-html-content").innerHTML
See: 24-transfer-html-content-to-a-box.htm

object.scrollX
1: Add scrollbar if needed, 0: never add.
- Adds a horizontal scroll bar to the object as needed.

object.scrollY
- Adds a vertical scrollbar to the object as needed.

object.onClick(func:function)
- Each time the object is pressed; the specified function is called.
-- The object itself is sent to the called function.
- remove with object.remove_onClick(func:function)

object.add(object:BasicObject)
- Manually moves the object sent as a parameter inside this box object.
- Auto to add; The object to be added can be created as an element of the box object.
Like object.txtObject = createTextBox() .
- To add a box object to a <div> element created in HTML,
document.getElementById("elementID").appendChild(boxObject.element)
See: 29-use-with-html.htm

object.element
- Element object that connects the object with HTML.
- Uses <div> element in HTML.


---


BUTTON OBJECT (CLASS NAME: Button):
- the user; by pressing on the object, it enables it to run a function.

createButton(left:float, top:float, width:integer, height:integer) : Button
It can also be used as - or cbtn(*) or new Button(*).
- Creates a new button object.

object.text
- Sets the text of the object.
- The value it carries is of string type.

object.enabled
1: used, 0: not available
- Makes the object passive.

object.minimal
1: straight, 0: with make-up
- Makes the object flat.

object.onClick(func:function)
- Each time the object is pressed; the specified function is called.
-- The object itself is sent to the called function.

object.element
- Same as buttonElement as the object does not have a bearer element.

object.buttonElement
- Element object that connects the object with HTML.
- Uses <button> element in HTML.


---


TEXT BOX OBJECT (CLASS NAME: TextBox):
- It is used to get information from the user.

createTextBox(left:integer, top:integer, width:integer, height:integer) : TextBox
- Alternatively, it can be used as ctxt(*) or new TextBox(*).
- Creates a new text box object.

object.text
- Sets the text of the object.
- The value it carries is of string type.

object.title
- Sets the title of the text box.

object.enabled
- Activates/deactivates the object.
1: available, 0: NOT AVAILABLE

object.minimal
- Makes the object flat.
1: straight, 0: with make-up

object.onChange(func:function)
- Each time the object content changes, the specified function is executed.
-- The object itself is sent to the called function.
- remove with object.remove_onChange(func:function)

object.element
- Element object that connects the object's container with HTML.
- Uses <div> element in HTML.

object.inputElement
- Element object that connects the object with HTML.
- Uses <input> element in HTML.

object.titleElement
- It is the element object that connects the title part of the object with HTML.
- Uses <div> element in HTML.


---


TEXT OBJECT (CLASS NAME: Label):
- Used for writing.

createLabel(left:integer, top:integer, width:integer, height:integer) : Label
- Alternatively, it can be used as clbl(*) or new Label(*).
- Creates a new text object.

object.text
- Changes the object text.
- The value it carries is of string type.

object.space
- Leaves (inner) space between the content and the object boundary.
- Uses padding property in CSS.

object.spaceX
- Leaves space to the left and right of the content and object boundary.

object.spaceY
- Leaves space above and below the content and object boundary.

object.onClick(func:function)
- Each time the object is pressed; the specified function is called.
-- The object itself is sent to the called function.
- remove with object.remove_onClick(func:function)

object.element
- Element object that connects the object with HTML.
- Uses <div> element in HTML.


---


IMAGE OBJECT (CLASS NAME: Image):
- Used to display an image file (.png, .jpg, .gif, .svg etc.) on the screen.

createImage(left:integer, top:integer, width:integer, height:integer) : Image
- Alternatively, it can be used as cimg(*) or new Image(*).
- Creates a new image object.

object.load(filePath:string)
- Loads an image file into the object.
- The image file takes a while to load.
-- When the loading is complete, the function defined with onLoad() is called.

object.autoSize
- Automatically resizes the uploaded image.
0: fit the specified size of the object, 1: original size, 2: half the original size, 3: one-third of the original size ...
-- The default autoSize value is 1.
-- The autoSize value becomes 0 when the width or height of the image is changed.
NOTE: On high resolution mobile devices; In order to obtain a better quality view, image files can be saved large and reduced when loaded onto the screen.

object.naturalWidth
- Returns the original width of the image.
-- Must be used inside the onLoad() function.
NOTE: If object.autoSize = 1, the .width and .naturalWidth properties will have the same value when the image is uploaded.

object.naturalHeight
- Returns the original height of the image.
-- Must be used inside the onLoad() function.

object.space
- Leaves (inner) space between the picture and the object boundary.
- Uses padding property in CSS.

object.spaceX
- Leaves space on the left and right of the picture and object border.

object.spaceY
- Leaves space above and below the picture and object border.

object.onClick(func:function)
- Each time the object is pressed; the specified function is called.
-- The object itself is sent to the called function.
- remove with object.remove_onClick(func:function)

object.onLoad(func:function)
- When the image object is loaded, the function is called.
-- The object itself is sent to the called function.
- remove with object.remove_onLoad(func:function)
var myImage = createImage()
that.load("images/roket.png")
that.onLoad(function(self) {
	print(self.width)
	print(self.height)
})

object.element
- Same as imageElement as the object does not have a bearer element.

object.imageElement
- Element object that connects the object with HTML.
- Uses <img> element in HTML.


---


GENERAL FUNCTIONS:

setLoopTimer(milisecond:integer)
- Determines how often the loop() function will run.
- The duration is in milliseconds.
- Its standard value is 1000. (1 second)

selectBox(boxObject:Box)
- It determines the box in which the created objects will be moved first.
- Its default value is the page object.
-- To revert to the default value, selectBox(page)
- IMPORTANT NOTE: For performance, make passive autoAddObjectIntoBoxController and use selectBox() or .add() function.
-- basic.autoAddObjectIntoBoxController.setActive(0)

getSelectedBox() : Box or MainBox
- Returns the object to which the created objects were first moved.

makeBasicObject(object:BasicObject)
- Include the custom object you created in the ecosystem of the basic.js library.
-- If the created object is transferred as an element of another box, it is automatically moved into that box.
-- The created object can be accessed with the that variable until a new object is created.
- If specially designed objects consist of more than one basic object, as a carrier object; box object should be used.

---


CLOCK OBJECT (OBJECT NAME: clock):
- It gives current time information.
See: 07-wall-clock.htm

clock.hour
- It gives the current time information.

clock.minute
- It gives the current minute information.

clock.second
- It gives the current second information.


---


DATE OBJECT (OBJECT NAME: date):
- It gives current date information.
See: 41-date-and-time.htm

date.year
- 4 digits, what year we are in.

date.mouthNumber
- In numbers, what month we are in.

date.monthName
- The Turkish name of the current month.

date.mountName
- The English name of the current month.

date.dayNumber
- As a number, what day of the week we are.

date.gunName
- The Turkish name of the day we are in.

date.dayName
- The English name of the current day.

date.today
- Information about what month it is.

date.now
- The unique numerical equivalent of this moment.
NOTE: Information referred to as Timestamp in databases.


---


INFORMATION STORAGE OBJECT (OBJECT NAME: storage):
- Stores the value of a variable on the browser.
- When the browser is closed and reopened; The stored information can be restored.
-- Can be used to store user selected settings.
-- It can be used to store information in a simple way that does not need a database.
- Uses the window.localStorage property in JavaScript.
See: 58-to-do-list-app.htm

storage.save(key:string, value:*)
- Saves a variable with a key.
- key, key value. Example: "app58-user-name"
NOTE: Care should be taken when choosing a key, information can be saved by another application with the same key.
- value, the value to save. It can be any data type.

storage.load(key:string) : *
- Returns the contents of the variable saved with the key.

storage.remove(key:string)
- Deletes the contents of the variable saved with the key.


---


CONSTANTS:
- Some constants that the library uses.

basic.ACTION_COLOR = "#689BD2"
basic.ACTION2_COLOR = "cadetblue"
basic.WARNING_COLOR = "tomato"
basic.ALERT_COLOR = "gold"
basic.CANCEL_COLOR = "lightgray"
basic.TEXT_COLOR = "#4A4A4A"
basic.BACKGROUND_COLOR = "whitesmoke"
basic.DARK_BACKGROUND_COLOR = "#141414"
basic.FONT_SIZE = 20
basic.BUTTON_WIDTH = 130
basic.BUTTON_HEIGHT = 50
basic.BUTTON_COLOR = basic.ACTION_COLOR
basic.BUTTON_TEXT_COLOR = "rgba(0, 0, 0, 0.65)"
basic.TEXTBOX_WIDTH = 270
basic.TEXTBOX_HEIGHT = 50
basic.LABEL_WIDTH = 270
basic.LABEL_HEIGHT = "auto"
basic.BOX_WIDTH = 100
basic.BOX_HEIGHT = 100
basic.IMAGE_WIDTH = 50
basic.IMAGE_HEIGHT = 50


---


SOME FREQUENT FAULTS:
- When you encounter an error while developing a project, you can search on Google by adding the word JavaScript to the beginning of the error message on the console.

Uncaught TypeError: Cannot read properties of undefined (reading 'height')
Uncaught TypeError: Cannot set properties of undefined (setting 'left')
- The variable you are trying to reach is empty, the object is not passed. (undefined)

Uncaught SyntaxError: Unexpected identifier
Uncaught SyntaxError: Unexpected end of input
Uncaught SyntaxError: Unexpected token ')'
Uncaught SyntaxError: missing ) after argument list
- Check curly braces, braces and other marks.
-- The curly braces are not opened, but may be closed.
-- Parenthesis may not be closed when calling the function.


---


AUTHOR:
Bugra Ozden <bugra.ozden@gmail.com>





